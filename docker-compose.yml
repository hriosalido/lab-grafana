services:
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    labels:
      - "gh.codespaces.port-name=Grafana"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=marcusolsson-csv-datasource,agenty-flowcharting-panel,yesoreyeram-boomtable-panel,grafana-simple-json-datasource
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=agenty-flowcharting-panel
    restart: unless-stopped
    volumes:
       - ./grafana-data:/var/lib/grafana
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    labels:
      - "gh.codespaces.port-name=Prometheus"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped

  pushgateway:
    image: prom/pushgateway:latest
    container_name: pushgateway
    ports:
      - "9091:9091"
    labels:
      - "gh.codespaces.port-name=Pushgateway"
    restart: unless-stopped

  static-server:
    image: halverneus/static-file-server
    container_name: static-server
    environment:
      - PORT=8080
    volumes:
      - ./data:/web
    ports:
      - "8080:8080"
    labels:
      - "gh.codespaces.port-name=CSV Server"

  api-node:
    build:
      context: ./api-node/
      dockerfile: Dockerfile
    container_name: api-node
    ports:
      - "4000:3000"
    volumes:
      - ./api-node:/app
      - /app/node_modules  # esto evita que el volumen del host tape los node_modules

    labels:
      - "gh.codespaces.port-name=Api Node"
    restart: unless-stopped

  postgres:
    image: postgres:14
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: grafana
      POSTGRES_PASSWORD: grafana
      POSTGRES_DB: negocio
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    labels:
      - "gh.codespaces.port-name=PostgreSQL"


  adminer:
    image: adminer
    container_name: adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    labels:
      - "gh.codespaces.port-name=Adminer"
    depends_on:
      - postgres
